Processos/Daemons diferentes entre CentOS e Debian:

- HTTPD x Apache
	- Nome do processo é diferente
		Debian: apache2
		Centos: httpd
	- Fingerprint é semelhante
		Muda alguns detalhes como versão e assinatura da distribuição
	- As portas tcp utilizadas são por padrão as mesmas, mas podem ser diferentes sob customização.
		Debian pode estar somente na 443 e Centos apenas na 80
	
	Possível estrutura de caso:

	Caso 1: CENTOS
	-------------------
	Daemon: httpd
	Daemon Uid: 2
	Daemon Gid: 2
	Daemon IO Files: ['/var/log/httpd/error_log', '/var/log/httpd/ssl_error_log', '/var/log/httpd/access_log', '/var/log/httpd/ssl_access_log', '/var/log/httpd/ssl_request_log']
	Daemon Args: 
	Daemon TCP port: 0.0.0.0:80,0.0.0.0:443,
	Daemon TCP FP: {80: u'Apache httpd', 443: u'Apache httpd'}
	Daemon UDP port: 
	Daemon UDP FP: {}
	Daemon file Path: /usr/sbin/httpd
	Daemon Rpm Package: httpd-2.2.15
	Daemon Dpkb Package: None
	Daemon File Dac: 755
	Daemon File Uid: 48
	Daemon File Gid: 48
	PROBLEMA:
		ID do processo é maior do que o ID do binário.
		Um usuário mal intencionado pode utilizar este comportamento para elevar privilégio.
	SOLUÇÃO:
		Revisar os requisitos de permissão de acesso do serviço, se possível,
		o owner do processo deve ser menor ou igual ao owner do binário utilizado.

	Observação: Para o sistema detectar que o id do binário é menor que o ID do processo, precisa ter um sistema especialista (ruled-based)... O cbr não vai ajudar a detectar esse tipo de problema.
	
	--------------------
	Caso 2: CENTOS
	--------------------
	Daemon: httpd
	Daemon Uid: 48
	Daemon Gid: 48
	Daemon IO Files: ['/var/log/httpd/error_log', '/var/log/httpd/ssl_error_log', '/var/log/httpd/access_log', '/var/log/httpd/ssl_access_log', '/var/log/httpd/ssl_request_log']
	Daemon Args: 
	Daemon TCP port: 0.0.0.0:80,0.0.0.0:443,
	Daemon TCP FP: {80: u'Apache httpd', 443: u'Apache httpd'}
	Daemon UDP port: 
	Daemon UDP FP: {}
	Daemon file Path: /usr/sbin/httpd
	Daemon Rpm Package: httpd-2.2.15
	Daemon Dpkb Package: None
	Daemon File Dac: 777
	Daemon File Uid: 0
	Daemon File Gid: 0
	PROBLEMA:
		Este binário possui um esquema de permissão de acesso configurado de forma promíscua.
	SOLUÇÃO:
		Revisar os requisitos de permissão de acesso do binário, remover excessos.
	
	Observação: CBR não detecta este tipo de problema.
	--------------------
	Caso 3: CENTOS
	--------------------
	Daemon: httpd
	Daemon Uid: 48
	Daemon Gid: 48
	Daemon IO Files: ['/var/log/httpd/error_log', '/var/log/httpd/ssl_error_log', '/var/log/httpd/access_log', '/var/log/httpd/ssl_access_log', '/var/log/httpd/ssl_request_log']
	Daemon Args: 
	Daemon TCP port: 0.0.0.0:80,0.0.0.0:443,
	Daemon TCP FP: {80: u'Apache httpd', 443: u'Apache httpd'}
	Daemon UDP port: 
	Daemon UDP FP: {}
	Daemon file Path: /usr/sbin/httpd
	Daemon Rpm Package: httpd-2.2.15
	Daemon Dpkb Package: None
	Daemon File Dac: 777
	Daemon File Uid: 0
	Daemon File Gid: 0
	PROBLEMA:
		Esta versão do software possui um registro de vulnerabilidade conhecida e catalogada sob CVE-XYZ
	SOLUÇÃO:
		Atualizar para uma versão com a devida correção para esta vulnerabilidade. Se possível, atualizar para a última versão disponível.
	--------------------

	Conclusões:
	
	O CBR não identifica uma vulnerabilidade de forma ATIVA, uma estrutura de informações deve ser fornecida e comparada com uma base de casos de vulnerabilidades existentes.
	Entretanto, esta BASE DE CASOS, deve ser alimentada manualmente por um profissional especialista. 
	É possível criar um sistema especialista (ruled-based) para detectar condições possivelmente vulneráveis, submeter as informações pertinentes ao CBR que verificará se existe um caso semelhante.
	O problema desta abordagem é que o CBR será inútil, pois a vulnerabilidade já foi detectada pelo ruled-based.



	


	


